== GOALS for car-fighter port ==
[] read through entire rocket program and make sure I understand EVERYTHING about it.
To hold entities and render them to the screen
    all of them are rectangles
User Input
    [done] Keyboard
    [] Controller
        [done] joystick
        [done] buttons
        [done] make sure all controller actions are processed in each frame, not just one.
            Yup, for each poll_iter, perfect.
        [] decrease the dead-zone size for more accuracy
            OR keep it, but make it a better equation
Dot Physics
    [] change angle_radians to "turns", which I like better for angles.
        or "angle_turns"
    [done] Fix Vector to have two vectors? (see TODO in vector.rs).
        Maybe stop using "vector" entirely, and put it all straight on Player.
        [done] add speed to Player
        [done] use Player speed to ramp stuff up!
        [done] match player movement to joystick
    [] change all occurrences of PI to use TAU instead
    [] Acceleration
        [] change the up button so that it is acceleration instead of
           a constant speed boost
        [] change the gun scatter so that it's a functions of the
           ship's acceleration or speed? Not sure which yet.
    [done] Rotate
        [done] More like, do exactly what the joystick does
        [done] get keyboard working for this, too
Rings
    [done] make circle grow out of player
    [] change circle colour depending on which button was pressed
    [] change circle to be an "arc", which is a polygon.
        Needs to be a list of arc sections that wrap around 0 properly.
        [done] draw a polygon
            [done] draw vertices of a polygon
            [done] draw it for real
                [done] convert from Point to vec2d
                [done] make polygon
        [done] limit firing rate to one per second
        [done] fix firing rate so the first shot happens.
        [] draw 2 layers of polygon
            [] fix them
                [] make a pause button for debugging purposes
                [] with a "step" button once paused
        [] draw a pretend circle
            takes in two angles, and draws between them
            draws forward from one to the other (even if 0 gets in the way)
Collisions being detected between objects
    NOT AABB, but all rectangular bounding boxes
Draw images to the screen
    with transparency in backgrounds
Lasers
    Death
    Set up targets to shoot
Multiple Players
Resetting the level
